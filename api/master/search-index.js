crystal_doc_search_index_callback({"repository_name":"Lens","body":"# Lens\n[![GitHub release](https://img.shields.io/github/release/syeopite/lens.svg)](https://github.com/syeopite/lens/releases) [![Lens CI](https://github.com/syeopite/lens/actions/workflows/ci.yml/badge.svg)](https://github.com/syeopite/lens/actions/workflows/ci.yml) [![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://syeopite.github.io/lens/)\n\nA multi-format internationalization (i18n) shard for Crystal.\n\nLens is designed to be fast, versatile and simple to use! Supports the likes of Gettext, Ruby YAML and more.\n\n\n## Why use Lens?\nLens was conceived due to various problems within crystal's internationalization ecosystem. As such, Lens aspires to overcome those issues. With lens:\n\n* Support of **multiple** different formats\n* **Constant** development of new features\n* And soon, **actual full** number and time localization through CLDR\n\nIn short, Lens is packed full of features and designed for internationalization.\n\n**Note: Documentation below is for Master. [For the stable release version, please see v0.1.0.](https://syeopite.github.io/lens/getting-started)**\n\n\n## Getting started \n\nLens supports numerous different formats:\n\n| Format | Backend|  Documentation |\n|:--------:|:--------:|:----------------:|\n| GNU Gettext PO | `Gettext::POBackend` | [Here](https://syeopite.github.io/lens/formats/gnu-gettext)\n| GNU Gettext MO | `Gettext::MOBackend` | [Here](https://syeopite.github.io/lens/formats/gnu-gettext)\n| Ruby YAML | `RubyI18n::Yaml` | [Here](https://syeopite.github.io/lens/formats/ruby-yaml)\n\n\nTo get started, simply initialize a backend: \n```crystal\nbackend = Gettext::MOBackend.new(\"locales\")\n```\n\nAnd begin translating!\n```crystal\ncatalogue = backend.create[\"en_US\"]\n\n# Basic\ncatalogue.gettext(\"A message\")     # => \"Translated message\"\n# Plurals\ncatalogue.ngettext(\"I have %d apple\", \"I have %d apples\", 1) # => \"Translated I have %d apples\"\n# Context\ncatalogue.pgettext(\"CopyPasteMenu\", \"copy\")          # => \"Translated copy\"\n# Context w/ Plurals\ncatalogue.npgettext(\"CopyPasteMenu\", \"Export %d file\", \"Export %d files\", 1) # => \"Translated message with plural-form 0\"\n```\n\nNote that each backend has a slightly different API.\n\n[See Getting Started for more information](https://syeopite.github.io/lens/getting-started)\n\n\n## Installation\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     lens:\n       github: syeopite/lens\n       version: ~> 0.1.0\n   ```\n\n2. Run `shards install`\n\n## Documentation\n[Reference](https://syeopite.github.io/lens/)\n\n[Library API](https://syeopite.github.io/lens/api/)\n\n\n## Contributing\n\n1. Fork it (<https://github.com/syeopite/lens/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [syeopite](https://github.com/syeopite) - creator and maintainer\n\n## Inspirations\n* [omarroth/gettext.cr](https://github.com/omarroth/gettext.cr)\n* [TechMagister/i18n.cr](https://github.com/TechMagister/i18n.cr)\n* [crystal-i18n/i18n](https://github.com/crystal-i18n/i18n)\n","program":{"html_id":"Lens/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"Lens","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"Lens/CrystalI18n","path":"CrystalI18n.html","kind":"module","full_name":"CrystalI18n","name":"CrystalI18n","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/backend/crystal-i18n.cr","line_number":5,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/crystal-i18n.cr#L5"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  CrystalI18n has been renamed to <code><a href=\"RubyI18n.html\">RubyI18n</a></code></p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"Lens/CrystalI18n/I18n","path":"CrystalI18n/I18n.html","kind":"class","full_name":"CrystalI18n::I18n","name":"I18n","abstract":false,"superclass":{"html_id":"Lens/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"Lens/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Lens/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/backend/crystal-i18n.cr","line_number":7,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/crystal-i18n.cr#L7"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"Lens/CrystalI18n","kind":"module","full_name":"CrystalI18n","name":"CrystalI18n"},"doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  CrystalI18n::I18n has been renamed to <code><a href=\"../RubyI18n/Yaml.html\">RubyI18n::Yaml</a></code></p>","class_methods":[],"constructors":[{"html_id":"new(locale_directory_path:String,reference_locale:String=\"en\")-class-method","name":"new","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  CrystalI18n::I18n has been renamed to <code><a href=\"../RubyI18n/Yaml.html\">RubyI18n::Yaml</a></code></p>","abstract":false,"args":[{"name":"locale_directory_path","doc":null,"default_value":"","external_name":"locale_directory_path","restriction":"String"},{"name":"reference_locale","doc":null,"default_value":"\"en\"","external_name":"reference_locale","restriction":"String"}],"args_string":"(locale_directory_path : String, reference_locale : String = \"en\")","args_html":"(locale_directory_path : String, reference_locale : String = <span class=\"s\">&quot;en&quot;</span>)","location":{"filename":"src/backend/crystal-i18n.cr","line_number":9,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/crystal-i18n.cr#L9"},"def":{"name":"new","args":[{"name":"locale_directory_path","doc":null,"default_value":"","external_name":"locale_directory_path","restriction":"String"},{"name":"reference_locale","doc":null,"default_value":"\"en\"","external_name":"reference_locale","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(locale_directory_path, reference_locale)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"create-instance-method","name":"create","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  CrystalI18n::I18n has been renamed to <code><a href=\"../RubyI18n/Yaml.html\">RubyI18n::Yaml</a></code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/backend/crystal-i18n.cr","line_number":113,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/crystal-i18n.cr#L113"},"def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return self"}},{"html_id":"define_rule(locale:String,value:Int32|Int64|Float64->String)-instance-method","name":"define_rule","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  CrystalI18n::I18n has been renamed to <code><a href=\"../RubyI18n/Yaml.html\">RubyI18n::Yaml</a></code></p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"(Int32 | Int64 | Float64 -> String)"}],"args_string":"(locale : String, value : Int32 | Int64 | Float64 -> String)","args_html":"(locale : String, value : Int32 | Int64 | Float64 -> String)","location":{"filename":"src/backend/crystal-i18n.cr","line_number":103,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/crystal-i18n.cr#L103"},"def":{"name":"define_rule","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"(Int32 | Int64 | Float64 -> String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"RubyI18n.define_rule(locale, value)"}},{"html_id":"localize(locale:String,time:Time,format:String)-instance-method","name":"localize","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  CrystalI18n::I18n has been renamed to <code><a href=\"../RubyI18n/Yaml.html\">RubyI18n::Yaml</a></code></p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Time"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"String"}],"args_string":"(locale : String, time : Time, format : String)","args_html":"(locale : String, time : Time, format : String)","location":{"filename":"src/backend/crystal-i18n.cr","line_number":69,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/crystal-i18n.cr#L69"},"def":{"name":"localize","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Time"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"format = @_source[locale].dig?(\"date\", \"formats\", format)\nif !format\n  raise(LensExceptions::MissingTranslation.new(\"Missing format pattern: '#{format}', for time localization\"))\nend\nreturn self.internal_localize_time(locale, format, time)\n"}},{"html_id":"plural_rules:Hash(String,Int32|Int64|Float64->String)-instance-method","name":"plural_rules","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  CrystalI18n::I18n has been renamed to <code><a href=\"../RubyI18n/Yaml.html\">RubyI18n::Yaml</a></code></p>","abstract":false,"args":[],"args_string":" : Hash(String, Int32 | Int64 | Float64 -> String)","args_html":" : Hash(String, Int32 | Int64 | Float64 -> String)","location":{"filename":"src/backend/crystal-i18n.cr","line_number":108,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/crystal-i18n.cr#L108"},"def":{"name":"plural_rules","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash((String, Int32 | Int64 | Float64 -> String))","visibility":"Public","body":"return PluralRulesCollection::Rules"}},{"html_id":"select(locale)-instance-method","name":"select","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  CrystalI18n::I18n has been renamed to <code><a href=\"../RubyI18n/Yaml.html\">RubyI18n::Yaml</a></code></p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":""}],"args_string":"(locale)","args_html":"(locale)","location":{"filename":"src/backend/crystal-i18n.cr","line_number":41,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/crystal-i18n.cr#L41"},"def":{"name":"select","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @_source.has_key?(locale)\n  @lang_state = locale\nelse\n  raise(KeyError.new(\"The #{locale} doesn't exist\"))\nend"}},{"html_id":"translate(key:String,count:Int|Float?=nil,iter:Int?=nil,scope:Indexable(String)|String?=nil,**kwargs)-instance-method","name":"translate","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  CrystalI18n::I18n has been renamed to <code><a href=\"../RubyI18n/Yaml.html\">RubyI18n::Yaml</a></code></p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Int | Float | ::Nil"},{"name":"iter","doc":null,"default_value":"nil","external_name":"iter","restriction":"Int | ::Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Indexable(String) | String | ::Nil"}],"args_string":"(key : String, count : Int | Float? = nil, iter : Int? = nil, scope : Indexable(String) | String? = nil, **kwargs)","args_html":"(key : String, count : Int | Float? = <span class=\"n\">nil</span>, iter : Int? = <span class=\"n\">nil</span>, scope : Indexable(String) | String? = <span class=\"n\">nil</span>, **kwargs)","location":{"filename":"src/backend/crystal-i18n.cr","line_number":50,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/crystal-i18n.cr#L50"},"def":{"name":"translate","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Int | Float | ::Nil"},{"name":"iter","doc":null,"default_value":"nil","external_name":"iter","restriction":"Int | ::Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Indexable(String) | String | ::Nil"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.translate(@lang_state, key, count, iter, scope, **kwargs)"}},{"html_id":"translate(locale:String,key:String,count:Int|Float?=nil,iter:Int?=nil,scope:Indexable(String)|String?=nil,**kwargs)-instance-method","name":"translate","doc":null,"summary":"<p><span class=\"flag red\">DEPRECATED</span>  CrystalI18n::I18n has been renamed to <code><a href=\"../RubyI18n/Yaml.html\">RubyI18n::Yaml</a></code></p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Int | Float | ::Nil"},{"name":"iter","doc":null,"default_value":"nil","external_name":"iter","restriction":"Int | ::Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Indexable(String) | String | ::Nil"}],"args_string":"(locale : String, key : String, count : Int | Float? = nil, iter : Int? = nil, scope : Indexable(String) | String? = nil, **kwargs)","args_html":"(locale : String, key : String, count : Int | Float? = <span class=\"n\">nil</span>, iter : Int? = <span class=\"n\">nil</span>, scope : Indexable(String) | String? = <span class=\"n\">nil</span>, **kwargs)","location":{"filename":"src/backend/crystal-i18n.cr","line_number":55,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/crystal-i18n.cr#L55"},"def":{"name":"translate","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Int | Float | ::Nil"},{"name":"iter","doc":null,"default_value":"nil","external_name":"iter","restriction":"Int | ::Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Indexable(String) | String | ::Nil"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  self.internal_translate(locale, key, count, iter, **kwargs)\nrescue ex : KeyError | Exception\n  if ex.is_a?(KeyError)\n    raise(LensExceptions::MissingTranslation.new(\"Translation in the path '#{key}' does not exist for #{locale} locale\"))\n  else\n    if ex.message == \"Expected Array or Hash, not String\"\n      raise(LensExceptions::MissingTranslation.new(\"One of the routes given in the path: '#{key}' for the '#{locale}' locale leads to a dead end. \" + \"Please make sure the path to the locale key is correct.\"))\n    else\n      raise(ex)\n    end\n  end\nend"}}],"macros":[],"types":[]}]},{"html_id":"Lens/Gettext","path":"Gettext.html","kind":"module","full_name":"Gettext","name":"Gettext","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/backend/gettext/gettext.cr","line_number":9,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/gettext.cr#L9"},{"filename":"src/backend/gettext/mo/backend.cr","line_number":3,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/mo/backend.cr#L3"},{"filename":"src/backend/gettext/plural-forms/ast.cr","line_number":1,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/ast.cr#L1"},{"filename":"src/backend/gettext/plural-forms/interpreter.cr","line_number":3,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/interpreter.cr#L3"},{"filename":"src/backend/gettext/plural-forms/lexer.cr","line_number":5,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/lexer.cr#L5"},{"filename":"src/backend/gettext/plural-forms/parser.cr","line_number":6,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/parser.cr#L6"},{"filename":"src/backend/gettext/plural-forms/tokens.cr","line_number":1,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/tokens.cr#L1"},{"filename":"src/backend/gettext/po/backend.cr","line_number":1,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/po/backend.cr#L1"},{"filename":"src/backend/gettext/po/parser.cr","line_number":5,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/po/parser.cr#L5"},{"filename":"src/backend/gettext/po/scanner.cr","line_number":5,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/po/scanner.cr#L5"},{"filename":"src/backend/gettext/po/tokens.cr","line_number":1,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/po/tokens.cr#L1"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"Lens/Gettext","kind":"module","full_name":"Gettext","name":"Gettext"}],"subclasses":[],"including_types":[],"namespace":null,"doc":"Namespace for logic relating to the [GNU Gettext](https://www.gnu.org/software/gettext/) format\n\nGettext is typically separated into two files: `.po` and `.mo`. Both of these formats are fully supported\nby Lens with either the `Gettext::MOBackend` or `Gettext::POBackend` backends.\n\nFor more information, please see their respective documentations.\n\nAll functionality (except flags) of Gettext are implemented.","summary":"<p>Namespace for logic relating to the <a href=\"https://www.gnu.org/software/gettext/\">GNU Gettext</a> format</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"Lens/Gettext/Catalogue","path":"Gettext/Catalogue.html","kind":"struct","full_name":"Gettext::Catalogue","name":"Catalogue","abstract":false,"superclass":{"html_id":"Lens/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"Lens/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"Lens/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"Lens/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/backend/gettext/gettext.cr","line_number":90,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/gettext.cr#L90"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"Lens/Gettext","kind":"module","full_name":"Gettext","name":"Gettext"},"doc":"Gettext message catalogue. Contains methods for handling translations\n\nYou **should not** be manually creating an instance of this class! Instead let the Gettext backends\ndo it for you! See `Gettext::MOBackend` and `Gettext::POBackend`","summary":"<p>Gettext message catalogue.</p>","class_methods":[],"constructors":[{"html_id":"new(contents:Hash(String,Hash(Int8,String)))-class-method","name":"new","doc":"Creates a message catalogue from parsed Gettext data","summary":"<p>Creates a message catalogue from parsed Gettext data</p>","abstract":false,"args":[{"name":"contents","doc":null,"default_value":"","external_name":"contents","restriction":"Hash(String, Hash(Int8, String))"}],"args_string":"(contents : Hash(String, Hash(Int8, String)))","args_html":"(contents : Hash(String, Hash(Int8, String)))","location":{"filename":"src/backend/gettext/gettext.cr","line_number":112,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/gettext.cr#L112"},"def":{"name":"new","args":[{"name":"contents","doc":null,"default_value":"","external_name":"contents","restriction":"Hash(String, Hash(Int8, String))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(contents)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"contents:Hash(String,Hash(Int8,String))-instance-method","name":"contents","doc":"Returns all messages within the catalogue\n\nYou should **never** have to deal with this method under normal circumstances.\nPlease use the `#gettext` family of methods to translate your application instead.\n\n```\ncatalogue = Gettext::MOBackend.new(\"examples\").create[\"en-US\"]\ncatalogue.contents # => {...}\n```","summary":"<p>Returns all messages within the catalogue</p>","abstract":false,"args":[],"args_string":" : Hash(String, Hash(Int8, String))","args_html":" : Hash(String, Hash(Int8, String))","location":{"filename":"src/backend/gettext/gettext.cr","line_number":109,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/gettext.cr#L109"},"def":{"name":"contents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Hash(Int8, String))","visibility":"Public","body":"@contents"}},{"html_id":"gettext(id:String)-instance-method","name":"gettext","doc":"Fetches the translated message for the specific ID. If none can be found the given ID is returned.\n\n```\ncatalogue = Gettext::MOBackend.new(\"examples\").create[\"en_US\"]\ncatalogue.gettext(\"A message\")     # => \"Translated message\"\ncatalogue.gettext(\"I don't exist\") # => \"I don't exist\"\n```","summary":"<p>Fetches the translated message for the specific ID.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"}],"args_string":"(id : String)","args_html":"(id : String)","location":{"filename":"src/backend/gettext/gettext.cr","line_number":144,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/gettext.cr#L144"},"def":{"name":"gettext","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  return @contents[id][0]\nrescue KeyError\n  return id\nend"}},{"html_id":"headers:Hash(String,String)-instance-method","name":"headers","doc":"Returns a hash of the headers\n\n```\ncatalogue = Gettext::MOBackend.new(\"examples\").create[\"en_US\"]\ncatalogue.headers[\"Plural-Forms\"] # => \"nplurals=2; plural=(n != 1);\"\n```","summary":"<p>Returns a hash of the headers</p>","abstract":false,"args":[],"args_string":" : Hash(String, String)","args_html":" : Hash(String, String)","location":{"filename":"src/backend/gettext/gettext.cr","line_number":97,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/gettext.cr#L97"},"def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@headers"}},{"html_id":"ngettext(id:String,plural_id,n)-instance-method","name":"ngettext","doc":"Fetches the translated message for the specific ID with the correct plural form. Returns either the singular or plural id if none can be found.\n\n```\ncatalogue = Gettext::MOBackend.new(\"examples\").create[\"en_US\"]\ncatalogue.ngettext(\"I have %d apple\", \"I have %d apples\", 0) # => \"Translated message with plural-form 1\"\ncatalogue.ngettext(\"I have %d apple\", \"I have %d apples\", 1) # => \"Translated message with plural-form 0\"\n\n# Not found:\ncatalogue.ngettext(\"I have %d pear\", \"I have %d pears\", 0) # => \"I have %d pears\"\ncatalogue.ngettext(\"I have %d pear\", \"I have %d pears\", 1) # => \"I have %d pear\"\n```","summary":"<p>Fetches the translated message for the specific ID with the correct plural form.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"},{"name":"plural_id","doc":null,"default_value":"","external_name":"plural_id","restriction":""},{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(id : String, plural_id, n)","args_html":"(id : String, plural_id, n)","location":{"filename":"src/backend/gettext/gettext.cr","line_number":163,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/gettext.cr#L163"},"def":{"name":"ngettext","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"},{"name":"plural_id","doc":null,"default_value":"","external_name":"plural_id","restriction":""},{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @plural_interpreter.nil?\n  return id\nend\nbegin\n  return @contents[id][self.process_plural(n)]\nrescue KeyError\n  if n == 0\n    return id\n  else\n    return plural_id\n  end\nend\n"}},{"html_id":"npgettext(context,id,plural_id,n)-instance-method","name":"npgettext","doc":"Fetches the translated message for the specific ID that is bound by context with the correct plural form.\n\n```\ncatalogue = Gettext::MOBackend.new(\"examples\").create[\"en_US\"]\ncatalogue.npgettext(\"CopyPasteMenu\", \"Export %d file\", \"Export %d files\", 0) # => \"Translated message with plural-form 1\"\ncatalogue.npgettext(\"CopyPasteMenu\", \"Export %d file\", \"Export %d files\", 1) # => \"Translated message with plural-form 0\"\n\n# Not found:\ncatalogue.npgettext(\"CopyPasteMenu\", \"None\", \"NonePlural\", 0) # => \"NonePlural\"\ncatalogue.npgettext(\"CopyPasteMenu\", \"None\", \"NonePlural\", 1) # => \"None\"\n```","summary":"<p>Fetches the translated message for the specific ID that is bound by context with the correct plural form.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"plural_id","doc":null,"default_value":"","external_name":"plural_id","restriction":""},{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(context, id, plural_id, n)","args_html":"(context, id, plural_id, n)","location":{"filename":"src/backend/gettext/gettext.cr","line_number":206,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/gettext.cr#L206"},"def":{"name":"npgettext","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"plural_id","doc":null,"default_value":"","external_name":"plural_id","restriction":""},{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @plural_interpreter.nil?\n  return id\nend\nbegin\n  return @contents[\"#{context}\\u0004#{id}\"][self.process_plural(n)]\nrescue KeyError\n  if n == 0\n    return id\n  else\n    return plural_id\n  end\nend\n"}},{"html_id":"pgettext(context,id)-instance-method","name":"pgettext","doc":"Fetches the translated message for the specific ID that is bound by context. If none can be found the given ID is returned.\n\n```\ncatalogue = Gettext::MOBackend.new(\"examples\").create[\"en_US\"]\n\ncatalogue.pgettext(\"CopyPasteMenu\", \"copy\")          # => \"Translated copy\"\ncatalogue.pgettext(\"CopyPasteMenu\", \"I don't exist\") # => \"I don't exist\"\n```","summary":"<p>Fetches the translated message for the specific ID that is bound by context.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""}],"args_string":"(context, id)","args_html":"(context, id)","location":{"filename":"src/backend/gettext/gettext.cr","line_number":187,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/gettext.cr#L187"},"def":{"name":"pgettext","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  return @contents[\"#{context}\\u0004#{id}\"][0]\nrescue KeyError\n  return id\nend"}}],"macros":[],"types":[]},{"html_id":"Lens/Gettext/MOBackend","path":"Gettext/MOBackend.html","kind":"struct","full_name":"Gettext::MOBackend","name":"MOBackend","abstract":false,"superclass":{"html_id":"Lens/Gettext/Backend","kind":"struct","full_name":"Gettext::Backend","name":"Backend"},"ancestors":[{"html_id":"Lens/Gettext/Backend","kind":"struct","full_name":"Gettext::Backend","name":"Backend"},{"html_id":"Lens/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"Lens/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"Lens/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/backend/gettext/mo/backend.cr","line_number":11,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/mo/backend.cr#L11"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"BE_MAGIC","name":"BE_MAGIC","value":"3725722773_i64","doc":null,"summary":null},{"id":"LE_MAGIC","name":"LE_MAGIC","value":"2500072158_i64","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"Lens/Gettext","kind":"module","full_name":"Gettext","name":"Gettext"},"doc":"The backend for Gettext's MO files. This class contains methods to parse and interact with them.\n\nSimilar to the Gettext module from Python, feel free to subclass and override the internal `#parse_` method\nto create a backend for other .mo files. However, please consider opening a PR and adding it directly\nto lens instead!","summary":"<p>The backend for Gettext's MO files.</p>","class_methods":[],"constructors":[{"html_id":"new(locale_directory_path:String)-class-method","name":"new","doc":"Create a new MO backend instance that reads from the given locale directory path\n\n```\nGettext::MOBackend.new(\"locales\")\n```","summary":"<p>Create a new MO backend instance that reads from the given locale directory path</p>","abstract":false,"args":[{"name":"locale_directory_path","doc":null,"default_value":"","external_name":"locale_directory_path","restriction":"String"}],"args_string":"(locale_directory_path : String)","args_html":"(locale_directory_path : String)","location":{"filename":"src/backend/gettext/mo/backend.cr","line_number":20,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/mo/backend.cr#L20"},"def":{"name":"new","args":[{"name":"locale_directory_path","doc":null,"default_value":"","external_name":"locale_directory_path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(locale_directory_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"create:Hash(String,Catalogue)-instance-method","name":"create","doc":"Create message catalogue from the loaded locale files.\n\nThis is the equivalent to `parse` and is only here for compatibility with `Gettext::POBackend`\n\nThis is returned as a mapping of the language code to the catalogue\nin which the language code is taken from the `Language` header. If\nnone can be found then the mo file name is used as a fallback.\n\n```\nbackend = Gettext::MOBackend.new(\"locales\")\nbackend.create # => Hash(String, Catalogue)\n```","summary":"<p>Create message catalogue from the loaded locale files.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Catalogue)","args_html":" : Hash(String, <a href=\"../Gettext/Catalogue.html\">Catalogue</a>)","location":{"filename":"src/backend/gettext/mo/backend.cr","line_number":103,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/mo/backend.cr#L103"},"def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Catalogue)","visibility":"Public","body":"return self.parse"}},{"html_id":"parse:Hash(String,Catalogue)-instance-method","name":"parse","doc":"Parse gettext mo files into message catalogues.\n\nThis is returned as a mapping of the language code to the catalogue\nin which the language code is taken from the `Language` header. If\nnone can be found then the mo file name is used as a fallback.\n\n```\nbackend = Gettext::MOBackend.new(\"locales\")\nbackend.parse # => Hash(String, Catalogue)\n```","summary":"<p>Parse gettext mo files into message catalogues.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Catalogue)","args_html":" : Hash(String, <a href=\"../Gettext/Catalogue.html\">Catalogue</a>)","location":{"filename":"src/backend/gettext/mo/backend.cr","line_number":33,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/mo/backend.cr#L33"},"def":{"name":"parse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Catalogue)","visibility":"Public","body":"preprocessed_messages = {} of String => Hash(String, Hash(Int8, String))\nDir.glob(\"#{@locale_directory_path}/**/*.mo\") do |gettext_file|\n  name = File.basename(gettext_file)\n  contents = File.open(gettext_file) do |file|\n    self.parse_(name, io: file)\n  end\n  header = extract_headers(contents)\n  if (lang = header[\"Language\"]?) && (!lang.empty?)\n    if preprocessed_messages.has_key?(lang)\n      preprocessed_messages[lang].merge!(contents)\n    else\n      preprocessed_messages[lang] = contents\n    end\n  else\n    if preprocessed_messages.has_key?(name)\n      preprocessed_messages[name].merge!(contents)\n    else\n      preprocessed_messages[name] = contents\n    end\n  end\nend\nlocale_catalogues = {} of String => Catalogue\npreprocessed_messages.each do |name, translations|\n  catalogue = Catalogue.new(translations)\n  if (lang = catalogue.headers[\"Language\"]?) && (!lang.empty?)\n    locale_catalogues[lang] = catalogue\n  else\n    locale_catalogues[name] = catalogue\n  end\nend\nreturn locale_catalogues\n"}}],"macros":[],"types":[]},{"html_id":"Lens/Gettext/PluralForm","path":"Gettext/PluralForm.html","kind":"module","full_name":"Gettext::PluralForm","name":"PluralForm","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/backend/gettext/plural-forms/ast.cr","line_number":5,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/ast.cr#L5"},{"filename":"src/backend/gettext/plural-forms/interpreter.cr","line_number":6,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/interpreter.cr#L6"},{"filename":"src/backend/gettext/plural-forms/lexer.cr","line_number":17,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/lexer.cr#L17"},{"filename":"src/backend/gettext/plural-forms/parser.cr","line_number":9,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/parser.cr#L9"},{"filename":"src/backend/gettext/plural-forms/tokens.cr","line_number":4,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/tokens.cr#L4"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"Lens/Gettext/PluralForm","kind":"module","full_name":"Gettext::PluralForm","name":"PluralForm"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"Lens/Gettext","kind":"module","full_name":"Gettext","name":"Gettext"},"doc":"Module for handling the plural-forms header used by Gettext\n\nYou should **never** have to deal with this module. The Gettext backends automatically\ncalls the required methods here for interpreting plural-forms.\n\n[Everything in here is based on the tree-walk interpreter from\ncrafting interpreters](https://www.craftinginterpreters.com/a-tree-walk-interpreter.html)\n\nThanks Robert Nystrom!","summary":"<p>Module for handling the plural-forms header used by Gettext</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"Lens/Gettext/PluralForm/Interpreter","path":"Gettext/PluralForm/Interpreter.html","kind":"class","full_name":"Gettext::PluralForm::Interpreter","name":"Interpreter","abstract":false,"superclass":{"html_id":"Lens/Gettext/PluralForm/ExpressionVisitor","kind":"class","full_name":"Gettext::PluralForm::ExpressionVisitor","name":"ExpressionVisitor"},"ancestors":[{"html_id":"Lens/Gettext/PluralForm/ExpressionVisitor","kind":"class","full_name":"Gettext::PluralForm::ExpressionVisitor","name":"ExpressionVisitor"},{"html_id":"Lens/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Lens/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/backend/gettext/plural-forms/interpreter.cr","line_number":12,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/interpreter.cr#L12"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"Lens/Gettext/PluralForm","kind":"module","full_name":"Gettext::PluralForm","name":"PluralForm"},"doc":"A interpreter that calculates the plural-form to take from syntax trees representing the plural-form expression.\n\n[Based on this interpreter from crafting interpreters](https://craftinginterpreters.com/evaluating-expressions.html)","summary":"<p>A interpreter that calculates the plural-form to take from syntax trees representing the plural-form expression.</p>","class_methods":[],"constructors":[{"html_id":"new(expressions:Array(Expression))-class-method","name":"new","doc":"Creates an interpreter with the given expression trees from the `PluralForm::Parser` as input.\n\n```\nplural_form_scanner = Gettext::PluralForm::Scanner.new(\"nplurals=2; plural=(n > 1);\")\nexpressions = Gettext::PluralForm::Parser.new(plural_form_scanner.scan).parse\ninterpreter = Gettext::PluralForm::Interpreter.new(expressions)\ninterpreter.interpret(1)  # => 0\ninterpreter.interpret(50) # => 1\n```","summary":"<p>Creates an interpreter with the given expression trees from the <code><a href=\"../../Gettext/PluralForm/Parser.html\">PluralForm::Parser</a></code> as input.</p>","abstract":false,"args":[{"name":"expressions","doc":null,"default_value":"","external_name":"expressions","restriction":"Array(Expression)"}],"args_string":"(expressions : Array(Expression))","args_html":"(expressions : Array(Expression))","location":{"filename":"src/backend/gettext/plural-forms/interpreter.cr","line_number":22,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/interpreter.cr#L22"},"def":{"name":"new","args":[{"name":"expressions","doc":null,"default_value":"","external_name":"expressions","restriction":"Array(Expression)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(expressions)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"interpret(number)-instance-method","name":"interpret","doc":"Calculates which plural form to use for the given number","summary":"<p>Calculates which plural form to use for the given number</p>","abstract":false,"args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""}],"args_string":"(number)","args_html":"(number)","location":{"filename":"src/backend/gettext/plural-forms/interpreter.cr","line_number":164,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/interpreter.cr#L164"},"def":{"name":"interpret","args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.assign_plural(number)\n@expressions.each do |expr|\n  self.evaluate(expr)\nend\nreturn @environment[\"plural\"]\n"}}],"macros":[],"types":[]},{"html_id":"Lens/Gettext/PluralForm/Parser","path":"Gettext/PluralForm/Parser.html","kind":"class","full_name":"Gettext::PluralForm::Parser","name":"Parser","abstract":false,"superclass":{"html_id":"Lens/Lens/Base/Parser","kind":"class","full_name":"Lens::Base::Parser","name":"Parser"},"ancestors":[{"html_id":"Lens/Lens/Base/Parser","kind":"class","full_name":"Lens::Base::Parser","name":"Parser"},{"html_id":"Lens/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Lens/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/backend/gettext/plural-forms/parser.cr","line_number":16,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/parser.cr#L16"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"Lens/Gettext/PluralForm","kind":"module","full_name":"Gettext::PluralForm","name":"PluralForm"},"doc":"Parser for generating plural-form expression ASTs out of an array of tokens\n\n\n[Based on this parser from crafting interpreters](https://www.craftinginterpreters.com/parsing-expressions.html)","summary":"<p>Parser for generating plural-form expression ASTs out of an array of tokens</p>","class_methods":[],"constructors":[{"html_id":"new(source:String)-class-method","name":"new","doc":"Creates a new parser instance from the given array of tokens","summary":"<p>Creates a new parser instance from the given array of tokens</p>","abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"}],"args_string":"(source : String)","args_html":"(source : String)","location":{"filename":"src/helpers/base/parser.cr","line_number":8,"url":"https://github.com/syeopite/lens/blob/3600e399/src/helpers/base/parser.cr#L8"},"def":{"name":"new","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(source)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"parse-instance-method","name":"parse","doc":"Parse an array of tokens into abstract syntax trees that represents a plural-form expression (C)\n\n```\nplural_form_scanner = Gettext::PluralForm::Scanner.new(\"nplurals=2; plural=(n > 1);\")\ntokens = plural_form_scanner.scan\nplural_form_parser = Gettext::PluralForm::Parser.new(tokens)\nplural_form_parser.parse # => Array(Expressions)\n```","summary":"<p>Parse an array of tokens into abstract syntax trees that represents a plural-form expression (C)</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/backend/gettext/plural-forms/parser.cr","line_number":122,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/parser.cr#L122"},"def":{"name":"parse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"expressions = [] of Expression\nself.token_reader do |token|\n  expressions << self.expression\nend\nreturn expressions\n"}}],"macros":[],"types":[]},{"html_id":"Lens/Gettext/PluralForm/Scanner","path":"Gettext/PluralForm/Scanner.html","kind":"class","full_name":"Gettext::PluralForm::Scanner","name":"Scanner","abstract":false,"superclass":{"html_id":"Lens/Lens/Base/Lexer","kind":"class","full_name":"Lens::Base::Lexer","name":"Lexer"},"ancestors":[{"html_id":"Lens/Lens/Base/Lexer","kind":"class","full_name":"Lens::Base::Lexer","name":"Lexer"},{"html_id":"Lens/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"Lens/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"Lens/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Lens/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/backend/gettext/plural-forms/lexer.cr","line_number":23,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/lexer.cr#L23"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"Lens/Gettext/PluralForm","kind":"module","full_name":"Gettext::PluralForm","name":"PluralForm"},"doc":"A scanner to tokenize a subset of C's grammar\n\nBased on https://www.craftinginterpreters.com/scanning.html","summary":"<p>A scanner to tokenize a subset of C's grammar</p>","class_methods":[],"constructors":[{"html_id":"new(source:String)-class-method","name":"new","doc":"Creates a new scanner instance with the given source\n\n```\nplural_form_scanner = Gettext::PluralForm::Scanner.new(\"nplurals=2; plural=(n > 1);\")\n```","summary":"<p>Creates a new scanner instance with the given source</p>","abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"}],"args_string":"(source : String)","args_html":"(source : String)","location":{"filename":"src/backend/gettext/plural-forms/lexer.cr","line_number":29,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/lexer.cr#L29"},"def":{"name":"new","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(source)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"Lens/Gettext/PluralForm/Token","path":"Gettext/PluralForm/Token.html","kind":"struct","full_name":"Gettext::PluralForm::Token","name":"Token","abstract":false,"superclass":{"html_id":"Lens/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"Lens/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"Lens/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"Lens/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/backend/gettext/plural-forms/tokens.cr","line_number":39,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/tokens.cr#L39"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"Lens/Gettext/PluralForm","kind":"module","full_name":"Gettext::PluralForm","name":"PluralForm"},"doc":"Object representing a token from the grammar of gettext po files","summary":"<p>Object representing a token from the grammar of gettext po files</p>","class_methods":[],"constructors":[{"html_id":"new(token_type,literal,column)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token_type","doc":null,"default_value":"","external_name":"token_type","restriction":""},{"name":"literal","doc":null,"default_value":"","external_name":"literal","restriction":""},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"args_string":"(token_type, literal, column)","args_html":"(token_type, literal, column)","location":{"filename":"src/backend/gettext/plural-forms/tokens.cr","line_number":44,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/tokens.cr#L44"},"def":{"name":"new","args":[{"name":"token_type","doc":null,"default_value":"","external_name":"token_type","restriction":""},{"name":"literal","doc":null,"default_value":"","external_name":"literal","restriction":""},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token_type, literal, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"column:Int32|Int64-instance-method","name":"column","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32 | Int64","args_html":" : Int32 | Int64","location":{"filename":"src/backend/gettext/plural-forms/tokens.cr","line_number":41,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/tokens.cr#L41"},"def":{"name":"column","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | Int64","visibility":"Public","body":"@column"}},{"html_id":"literal:String|Int32|Int64|Float64-instance-method","name":"literal","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String | Int32 | Int64 | Float64","args_html":" : String | Int32 | Int64 | Float64","location":{"filename":"src/backend/gettext/plural-forms/tokens.cr","line_number":40,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/tokens.cr#L40"},"def":{"name":"literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | Int32 | Int64 | Float64","visibility":"Public","body":"@literal"}},{"html_id":"token_type:TokenTypes-instance-method","name":"token_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : TokenTypes","args_html":" : TokenTypes","location":{"filename":"src/backend/gettext/plural-forms/tokens.cr","line_number":42,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/plural-forms/tokens.cr#L42"},"def":{"name":"token_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TokenTypes","visibility":"Public","body":"@token_type"}}],"macros":[],"types":[]}]},{"html_id":"Lens/Gettext/POBackend","path":"Gettext/POBackend.html","kind":"struct","full_name":"Gettext::POBackend","name":"POBackend","abstract":false,"superclass":{"html_id":"Lens/Gettext/Backend","kind":"struct","full_name":"Gettext::Backend","name":"Backend"},"ancestors":[{"html_id":"Lens/Gettext/Backend","kind":"struct","full_name":"Gettext::Backend","name":"Backend"},{"html_id":"Lens/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"Lens/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"Lens/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/backend/gettext/po/backend.cr","line_number":5,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/po/backend.cr#L5"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"Lens/Gettext","kind":"module","full_name":"Gettext","name":"Gettext"},"doc":"The backend for Gettext's PO files. This class contains methods to parse and interact with them.","summary":"<p>The backend for Gettext's PO files.</p>","class_methods":[],"constructors":[{"html_id":"new(locale_directory_path:String)-class-method","name":"new","doc":"Create a new PO backend instance that reads from the given locale directory path\n\n```\nGettext::POBackend.new(\"locales\")\n```","summary":"<p>Create a new PO backend instance that reads from the given locale directory path</p>","abstract":false,"args":[{"name":"locale_directory_path","doc":null,"default_value":"","external_name":"locale_directory_path","restriction":"String"}],"args_string":"(locale_directory_path : String)","args_html":"(locale_directory_path : String)","location":{"filename":"src/backend/gettext/po/backend.cr","line_number":11,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/po/backend.cr#L11"},"def":{"name":"new","args":[{"name":"locale_directory_path","doc":null,"default_value":"","external_name":"locale_directory_path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(locale_directory_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"create:Hash(String,Catalogue)-instance-method","name":"create","doc":"Create message catalogue from the loaded locale files\n\nThis is returned as a mapping of the language code to the catalogue\nin which the language code is taken from the `Language` header. If\nnone can be found then the po file name is used as a fallback.\n\nAs of v0.2 this is equivalent to `#parse`\n\n```\nbackend = Gettext::POBackend.new(\"locales\")\nbackend.create # => Hash(String, Catalogue)\n```","summary":"<p>Create message catalogue from the loaded locale files</p>","abstract":false,"args":[],"args_string":" : Hash(String, Catalogue)","args_html":" : Hash(String, <a href=\"../Gettext/Catalogue.html\">Catalogue</a>)","location":{"filename":"src/backend/gettext/po/backend.cr","line_number":43,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/po/backend.cr#L43"},"def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Catalogue)","visibility":"Public","body":"return self.parse"}},{"html_id":"parse:Hash(String,Catalogue)-instance-method","name":"parse","doc":"Parse tokens into message catalogues\n\nThis is returned as a mapping of the language code to the catalogue\nin which the language code is taken from the `Language` header. If\nnone can be found then the po file name is used as a fallback.\n\n```\nbackend = Gettext::POBackend.new(\"locales\")\nbackend.parse # => Hash(String, Catalogue)\n```","summary":"<p>Parse tokens into message catalogues</p>","abstract":false,"args":[],"args_string":" : Hash(String, Catalogue)","args_html":" : Hash(String, <a href=\"../Gettext/Catalogue.html\">Catalogue</a>)","location":{"filename":"src/backend/gettext/po/backend.cr","line_number":24,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/gettext/po/backend.cr#L24"},"def":{"name":"parse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Catalogue)","visibility":"Public","body":"preprocessed_messages = {} of String => Hash(String, Hash(Int8, String))\nDir.glob(\"#{@locale_directory_path}/**/*.po\") do |gettext_file|\n  name = File.basename(gettext_file)\n  contents = File.open(gettext_file) do |file|\n    self.parse_(name, io: file)\n  end\n  header = extract_headers(contents)\n  if (lang = header[\"Language\"]?) && (!lang.empty?)\n    if preprocessed_messages.has_key?(lang)\n      preprocessed_messages[lang].merge!(contents)\n    else\n      preprocessed_messages[lang] = contents\n    end\n  else\n    if preprocessed_messages.has_key?(name)\n      preprocessed_messages[name].merge!(contents)\n    else\n      preprocessed_messages[name] = contents\n    end\n  end\nend\nlocale_catalogues = {} of String => Catalogue\npreprocessed_messages.each do |name, translations|\n  catalogue = Catalogue.new(translations)\n  if (lang = catalogue.headers[\"Language\"]?) && (!lang.empty?)\n    locale_catalogues[lang] = catalogue\n  else\n    locale_catalogues[name] = catalogue\n  end\nend\nreturn locale_catalogues\n"}}],"macros":[],"types":[]}]},{"html_id":"Lens/Lens","path":"Lens.html","kind":"module","full_name":"Lens","name":"Lens","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/helpers/base/lexer.cr","line_number":7,"url":"https://github.com/syeopite/lens/blob/3600e399/src/helpers/base/lexer.cr#L7"},{"filename":"src/lens.cr","line_number":3,"url":"https://github.com/syeopite/lens/blob/3600e399/src/lens.cr#L3"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.2.0-dev\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"Lens/LensExceptions","path":"LensExceptions.html","kind":"module","full_name":"LensExceptions","name":"LensExceptions","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/helpers/exceptions.cr","line_number":2,"url":"https://github.com/syeopite/lens/blob/3600e399/src/helpers/exceptions.cr#L2"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Contains all the exceptions lens would throw","summary":"<p>Contains all the exceptions lens would throw</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"Lens/LensExceptions/LexError","path":"LensExceptions/LexError.html","kind":"class","full_name":"LensExceptions::LexError","name":"LexError","abstract":false,"superclass":{"html_id":"Lens/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"Lens/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"Lens/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Lens/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/helpers/exceptions.cr","line_number":4,"url":"https://github.com/syeopite/lens/blob/3600e399/src/helpers/exceptions.cr#L4"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"Lens/LensExceptions","kind":"module","full_name":"LensExceptions","name":"LensExceptions"},"doc":"Exception thrown when an error occurrs during lexing.","summary":"<p>Exception thrown when an error occurrs during lexing.</p>","class_methods":[],"constructors":[{"html_id":"new(file_name,message,full_line:String,line:Int,column:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"file_name","doc":null,"default_value":"","external_name":"file_name","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"full_line","doc":null,"default_value":"","external_name":"full_line","restriction":"String"},{"name":"line","doc":null,"default_value":"","external_name":"line","restriction":"Int"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Int"}],"args_string":"(file_name, message, full_line : String, line : Int, column : Int)","args_html":"(file_name, message, full_line : String, line : Int, column : Int)","location":{"filename":"src/helpers/exceptions.cr","line_number":5,"url":"https://github.com/syeopite/lens/blob/3600e399/src/helpers/exceptions.cr#L5"},"def":{"name":"new","args":[{"name":"file_name","doc":null,"default_value":"","external_name":"file_name","restriction":""},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"full_line","doc":null,"default_value":"","external_name":"full_line","restriction":"String"},{"name":"line","doc":null,"default_value":"","external_name":"line","restriction":"Int"},{"name":"column","doc":null,"default_value":"","external_name":"column","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"error_message = String.build do |str|\n  str << \"An error occurred when scanning '#{file_name}' at Line #{line}:\\n\"\n  str << \"#{full_line.strip(\"\\n\")}\\n\"\n  str << \"#{\" \" * (column - 1)} ^\\n\"\n  if column >= full_line.size\n    str << \"#{message} at column #{column + 1}\"\n  else\n    str << \"#{message}: '#{full_line[column]}' at column #{column + 1}\\n\"\n  end\nend\ninstance = LexError.allocate\ninstance.initialize(error_message)\nreturn instance\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"Lens/LensExceptions/MissingTranslation","path":"LensExceptions/MissingTranslation.html","kind":"class","full_name":"LensExceptions::MissingTranslation","name":"MissingTranslation","abstract":false,"superclass":{"html_id":"Lens/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"Lens/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"Lens/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Lens/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/helpers/exceptions.cr","line_number":30,"url":"https://github.com/syeopite/lens/blob/3600e399/src/helpers/exceptions.cr#L30"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"Lens/LensExceptions","kind":"module","full_name":"LensExceptions","name":"LensExceptions"},"doc":"Exception thrown when an translation is messing. Only applies to certain formats by default","summary":"<p>Exception thrown when an translation is messing.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"Lens/LensExceptions/ParseError","path":"LensExceptions/ParseError.html","kind":"class","full_name":"LensExceptions::ParseError","name":"ParseError","abstract":false,"superclass":{"html_id":"Lens/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"Lens/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"Lens/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Lens/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/helpers/exceptions.cr","line_number":26,"url":"https://github.com/syeopite/lens/blob/3600e399/src/helpers/exceptions.cr#L26"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"Lens/LensExceptions","kind":"module","full_name":"LensExceptions","name":"LensExceptions"},"doc":"Exception thrown when an error occurs during parsing","summary":"<p>Exception thrown when an error occurs during parsing</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"Lens/RubyI18n","path":"RubyI18n.html","kind":"module","full_name":"RubyI18n","name":"RubyI18n","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr","line_number":19,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr#L19"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Namespace for logic relating to ruby-i18n's YAML format.\n\nThis is a reimplementation of the ruby-i18n YAML format from [the ruby-i18n project](https://github.com/ruby-i18n/i18n).\n\nIn crystal, this is often adapted into the crystal-i18n format seen in the following projects:\n* [TechMagister/i18n.cr](https://github.com/TechMagister/i18n)\n* [crystal-i18n/i18n](https://github.com/crystal-i18n/i18n)\n* [crimson-knight/i18n.cr](https://github.com/crimson-knight/i18n.cr/)\n\nand any of the other implementations the community has made.\n\nTODO: replace link to documentation once written.\nEach of the variants in Crystal has some slight variations compared with the original ruby-i18n. Minor alternations are needed\nto be compatible with Lens. [See the usage documentation for more information](https://syeopite.github.io/lens/latest/formats/ruby-yaml/)\n","summary":"<p>Namespace for logic relating to ruby-i18n's YAML format.</p>","class_methods":[{"html_id":"define_rule(locale:String,value:Int32|Int64|Float64->String)-class-method","name":"define_rule","doc":"Set pluralization rules for the given locale\n\nThis allows you to overwrite or even define new pluralization rules\nfor whatever locale you desire.\n\n```\nRubyI18n.define_rule(\"ar\", ->(n : Int32 | Int64 | Float64) {\n  case\n  when n == 0             then \"zero\"\n  when n == 1             then \"one\"\n  when n == 2             then \"two\"\n  when 3..10 === n % 100  then \"few\"\n  when 11..99 === n % 100 then \"many\"\n  else                         \"other\"\n  end\n})\n```","summary":"<p>Set pluralization rules for the given locale</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"(Int32 | Int64 | Float64 -> String)"}],"args_string":"(locale : String, value : Int32 | Int64 | Float64 -> String)","args_html":"(locale : String, value : Int32 | Int64 | Float64 -> String)","location":{"filename":"src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr","line_number":605,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr#L605"},"def":{"name":"define_rule","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"(Int32 | Int64 | Float64 -> String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PluralRulesCollection::Rules[locale] = value"}},{"html_id":"plural_rules:Hash(String,Int32|Int64|Float64->String)-class-method","name":"plural_rules","doc":"Returns all defined CLDR plural rules","summary":"<p>Returns all defined CLDR plural rules</p>","abstract":false,"args":[],"args_string":" : Hash(String, Int32 | Int64 | Float64 -> String)","args_html":" : Hash(String, Int32 | Int64 | Float64 -> String)","location":{"filename":"src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr","line_number":610,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr#L610"},"def":{"name":"plural_rules","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash((String, Int32 | Int64 | Float64 -> String))","visibility":"Public","body":"return PluralRulesCollection::Rules"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"Lens/RubyI18n/Yaml","path":"RubyI18n/Yaml.html","kind":"class","full_name":"RubyI18n::Yaml","name":"Yaml","abstract":false,"superclass":{"html_id":"Lens/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"Lens/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"Lens/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr","line_number":21,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr#L21"}],"repository_name":"Lens","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"Lens/RubyI18n","kind":"module","full_name":"RubyI18n","name":"RubyI18n"},"doc":"Backend for the ruby-i18n format. This class contains methods to parse and interact with them","summary":"<p>Backend for the ruby-i18n format.</p>","class_methods":[],"constructors":[{"html_id":"new(locale_directory_path:String,reference_locale:String=\"en\")-class-method","name":"new","doc":"Creates a new ruby-i18n YAML instance that reads from the given locale directory path.\n\n```\nRubyI18n::Yaml.new(\"locales\")\n```","summary":"<p>Creates a new ruby-i18n YAML instance that reads from the given locale directory path.</p>","abstract":false,"args":[{"name":"locale_directory_path","doc":null,"default_value":"","external_name":"locale_directory_path","restriction":"String"},{"name":"reference_locale","doc":null,"default_value":"\"en\"","external_name":"reference_locale","restriction":"String"}],"args_string":"(locale_directory_path : String, reference_locale : String = \"en\")","args_html":"(locale_directory_path : String, reference_locale : String = <span class=\"s\">&quot;en&quot;</span>)","location":{"filename":"src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr","line_number":27,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr#L27"},"def":{"name":"new","args":[{"name":"locale_directory_path","doc":null,"default_value":"","external_name":"locale_directory_path","restriction":"String"},{"name":"reference_locale","doc":null,"default_value":"\"en\"","external_name":"reference_locale","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(locale_directory_path, reference_locale)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"create-instance-method","name":"create","doc":"Returns self | Here for compatibility with `Gettext::MOBackend` and `Gettext::POBackend`\n\n```\ncatalogue = RubyI18n::Yaml.new(\"locales\")\ncatalogue == catalogue.create # => true\n```\n","summary":"<p>Returns self | Here for compatibility with <code><a href=\"../Gettext/MOBackend.html\">Gettext::MOBackend</a></code> and <code><a href=\"../Gettext/POBackend.html\">Gettext::POBackend</a></code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr","line_number":295,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr#L295"},"def":{"name":"create","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return self"}},{"html_id":"define_rule(locale:String,value:Int32|Int64|Float64->String)-instance-method","name":"define_rule","doc":"Set pluralization rules for the given locale.\nSee `RubyI18n.define_rule` for more information","summary":"<p>Set pluralization rules for the given locale.</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"(Int32 | Int64 | Float64 -> String)"}],"args_string":"(locale : String, value : Int32 | Int64 | Float64 -> String)","args_html":"(locale : String, value : Int32 | Int64 | Float64 -> String)","location":{"filename":"src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr","line_number":279,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr#L279"},"def":{"name":"define_rule","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"(Int32 | Int64 | Float64 -> String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"RubyI18n.define_rule(locale, value)"}},{"html_id":"localize(locale:String,time:Time,format:String)-instance-method","name":"localize","doc":"Localize a date object with correspondence to a specific format.\n\nRaises `LensExceptions::MissingTranslation` when the selected format doesn't exist.\n\nNOTE: Default data is provided for the English locale.\n\n```\ndate = Time.unix(1629520612)\ncatalogue.localize(\"en\", date, format: \"default\") # => \"2021-08-21\"\ncatalogue.localize(\"en\", date, format: \"long\")    # => \"July 21, 2021\"\ncatalogue.localize(\"en\", date, format: \"short\")   # => \"Jul 21\"\n\n# Raises when the given format isn't defined.\ncatalogue.localize(\"ru\", date, format: \"short\") # LensExceptions::MissingTranslation\n```\n","summary":"<p>Localize a date object with correspondence to a specific format.</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Time"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"String"}],"args_string":"(locale : String, time : Time, format : String)","args_html":"(locale : String, time : Time, format : String)","location":{"filename":"src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr","line_number":164,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr#L164"},"def":{"name":"localize","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Time"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pattern = @_source[locale].dig?(\"date\", \"formats\", format)\nif pattern.nil?\n  if locale == \"en\"\n    pattern = case format\n    when \"default\"\n      \"%Y-%m-%d\"\n    when \"short\"\n      \"%b %d\"\n    when \"long\"\n      \"%B %d, %Y\"\n    end\n  else\n    raise(LensExceptions::MissingTranslation.new(\"The selected format: '#{format}' for time localization, does not exist!\"))\n  end\nelse\n  pattern = pattern.as_s\nend\nreturn self.internal_localize_time(locale, pattern.as(String), time)\n"}},{"html_id":"localize(locale:String,number:Int32|Int64|Float64,type:String=\"humanize\",format:String?=nil)-instance-method","name":"localize","doc":"Localize a number with correspondence to a specific type.\n\nRaises `LensExceptions::MissingTranslation` when attributes required for formatting are missing. [See usage docs for more information]()\n\nCurrently, Lens supports 3 localization types for numbers, within the ruby-i18n YAML format.\n\n* Humanize\n* Percentage\n* Currency\n\nTwo different formats are available in humanize.\n- Bytes\n   - Provides humanized byte size. IE 100000 bytes -> 1 MB\n- Decimal\n   - Provides humanized positive numbers.\n\nNOTE: Default data is provided for the English locale.\n\n\nThe most basic usage is humanizing a number. For instance:\n```\ncatalogue.localize(\"en\", 1000)           # => \"1 Thousand\"\ncatalogue.localize(\"en\", 10_250_000_000) # => \"10.2 Billion\"\n```\n\nHumanized bytes:\n```\ncatalogue.localize(\"en\", 1000, type: \"humanize\", format: \"storage_units\" # => \"1 KB\"\ncatalogue.localize(\"en\", 1500, type: \"humanize\", format: \"storage\") # => \"1.5 KB\"\n\ncatalogue.localize(\"en\", 100_000, type: \"humanize\", format: \"bytes\") # => \"100 KB\"\ncatalogue.localize(\"en\", 120_000, type: \"humanize\", format: \"storage\") # => \"120 KB\"\ncatalogue.localize(\"en\", 102_000, type: \"humanize\", format: \"storage\") # => \"102 KB\"\n```\n\nLocalized percentages:\n```\ncatalogue.localize(\"en\", 4.528, type: \"percentage\").should eq(\"4.53%\")\n```\n\nLocalized currency:\n```\ncatalogue.localize(\"en\", 4.528, type: \"currency\").should eq(\"$4.528\")\n```\n\n[For a more detailed explanation, please refer to the usage documentation.](https://syeopite.github.io/lens/latest/formats/ruby-yaml/)\n\n","summary":"<p>Localize a number with correspondence to a specific type.</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Int32 | Int64 | Float64"},{"name":"type","doc":null,"default_value":"\"humanize\"","external_name":"type","restriction":"String"},{"name":"format","doc":null,"default_value":"nil","external_name":"format","restriction":"String | ::Nil"}],"args_string":"(locale : String, number : Int32 | Int64 | Float64, type : String = \"humanize\", format : String? = nil)","args_html":"(locale : String, number : Int32 | Int64 | Float64, type : String = <span class=\"s\">&quot;humanize&quot;</span>, format : String? = <span class=\"n\">nil</span>)","location":{"filename":"src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr","line_number":232,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr#L232"},"def":{"name":"localize","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Int32 | Int64 | Float64"},{"name":"type","doc":null,"default_value":"\"humanize\"","external_name":"type","restriction":"String"},{"name":"format","doc":null,"default_value":"nil","external_name":"format","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case type.downcase\nwhen \"human\", \"humanize\"\n  self.internal_localize_human(locale, number, format || \"decimal_units\")\nwhen \"percentage\", \"percent\"\n  self.internal_localize_percentage(locale, number)\nwhen \"currency\", \"money\"\n  self.internal_localize_currency(locale, number)\nelse\n  self.internal_localize_human(locale, number, format || \"decimal_units\")\nend"}},{"html_id":"plural_rules:Hash(String,Int32|Int64|Float64->String)-instance-method","name":"plural_rules","doc":"Returns all defined CLDR plural rules.","summary":"<p>Returns all defined CLDR plural rules.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Int32 | Int64 | Float64 -> String)","args_html":" : Hash(String, Int32 | Int64 | Float64 -> String)","location":{"filename":"src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr","line_number":284,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr#L284"},"def":{"name":"plural_rules","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash((String, Int32 | Int64 | Float64 -> String))","visibility":"Public","body":"return PluralRulesCollection::Rules"}},{"html_id":"select(locale)-instance-method","name":"select","doc":"Selects a locale to use for translations\n\nRaises a KeyError when the selected locale isn't found.\n\nIf your application is monolingual then this along with `#translate(key, count, iter)` is your friend.\nHowever, if you need to switch languages on the fly then this method should be ignored.\n\nInstead, you should use the `#translate(locale, key, count, iter)` overload, which allows for fetching\nmessages from any locales without changing the state of the instance.\n\n```\ncatalogue = RubyI18n::Yaml.new(\"locales\")\n\ncatalogue.select(\"en\")\ncatalogue.translate(\"translation\") # => \"Translated Message\"\n\ncatalogue.select(\"example\")\ncatalogue.translate(\"translation\") # => \"Some message in another language\"\n\ncatalogue.select(\"doesn't exist\") # raises KeyError\n```\n","summary":"<p>Selects a locale to use for translations</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":""}],"args_string":"(locale)","args_html":"(locale)","location":{"filename":"src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr","line_number":81,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr#L81"},"def":{"name":"select","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @_source.has_key?(locale)\n  @lang_state = locale\nelse\n  raise(KeyError.new(\"The #{locale} doesn't exist\"))\nend"}},{"html_id":"translate(key:String,count:Int|Float?=nil,iter:Int?=nil,scope:Indexable(String)|String?=nil,**kwargs)-instance-method","name":"translate","doc":"Fetches a translation from the *selected* locale with the given path (key).\n\nFunctionality is the same as `RubyI18n::Yaml.translate(locale : String, key : String, count : Int | Float? = nil, iter : Int? = nil)`\nbut with the first argument removed","summary":"<p>Fetches a translation from the <em>selected</em> locale with the given path (key).</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Int | Float | ::Nil"},{"name":"iter","doc":null,"default_value":"nil","external_name":"iter","restriction":"Int | ::Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Indexable(String) | String | ::Nil"}],"args_string":"(key : String, count : Int | Float? = nil, iter : Int? = nil, scope : Indexable(String) | String? = nil, **kwargs)","args_html":"(key : String, count : Int | Float? = <span class=\"n\">nil</span>, iter : Int? = <span class=\"n\">nil</span>, scope : Indexable(String) | String? = <span class=\"n\">nil</span>, **kwargs)","location":{"filename":"src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr","line_number":93,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr#L93"},"def":{"name":"translate","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Int | Float | ::Nil"},{"name":"iter","doc":null,"default_value":"nil","external_name":"iter","restriction":"Int | ::Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Indexable(String) | String | ::Nil"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.translate(@lang_state, key, count, iter, scope, **kwargs)"}},{"html_id":"translate(locale:String,key:String,count:Int|Float?=nil,iter:Int?=nil,scope:Indexable(String)|String?=nil,**kwargs)-instance-method","name":"translate","doc":"Fetches a translation from the *given* locale with the given path (key).\n\nBasic usage is this:\n```\ncatalogue = RubyI18n::Yaml.new(\"locales\")\ncatalogue.translate(\"en\", \"translation\") # => \"Translated Message\"\n```\n\nThis method can also translate plural-forms through the count argument.\n```\ncatalogue.translate(\"en\", \"possessions.fruits.apples\", 50) # => \"I have 50 apples\"\ncatalogue.translate(\"en\", \"possessions.fruits.apples\", 1)  # => \"I have 1 apple\"\n```\n\nInterpolation can be done through kwargs.\n```\n# message is 'Hello there, my name is %{name} and I'm a %{profession}`.\nresult = catalogue.translate(\"en\", \"introduction.messages\", name: \"Steve\", profession: \"programmer\")\nresult # => \"Hello there, my name is Steve and I'm a programmer\"\n```\n\nIf the value at the given path (key) turns out to be an array then you can pass in the iter argument\nto select a specific value at the given index\n```\ncatalogue.translate(\"en\", \"items.foods\", iter: 2) # => \"Hamburger\"\n```\n\nA scope, the area from which the key-path should traverse from, can also be specified. For instance, a scope of `possessions.fruits`\nwould allow the key to just be `apples`.\n```\ncatalogue.translate(\"en\", \"possessions\", 1, scope : {\"possessions\", \"fruits\"})  # => \"I have 1 apple\"\n\n# Strings also work!\ncatalogue.translate(\"en\", \"possessions\", 1, scope : \"possessions.fruits\")  # => \"I have 1 apple\"\n```\n\nWhen a translation is not found `LensExceptions::MissingTranslation` would be raised.\n","summary":"<p>Fetches a translation from the <em>given</em> locale with the given path (key).</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Int | Float | ::Nil"},{"name":"iter","doc":null,"default_value":"nil","external_name":"iter","restriction":"Int | ::Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Indexable(String) | String | ::Nil"}],"args_string":"(locale : String, key : String, count : Int | Float? = nil, iter : Int? = nil, scope : Indexable(String) | String? = nil, **kwargs)","args_html":"(locale : String, key : String, count : Int | Float? = <span class=\"n\">nil</span>, iter : Int? = <span class=\"n\">nil</span>, scope : Indexable(String) | String? = <span class=\"n\">nil</span>, **kwargs)","location":{"filename":"src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr","line_number":135,"url":"https://github.com/syeopite/lens/blob/3600e399/src/backend/ruby-i18n-yaml/ruby-i18n-yaml.cr#L135"},"def":{"name":"translate","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Int | Float | ::Nil"},{"name":"iter","doc":null,"default_value":"nil","external_name":"iter","restriction":"Int | ::Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Indexable(String) | String | ::Nil"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  self.internal_translate(locale, key, count, iter, scope, **kwargs)\nrescue ex : KeyError | Exception\n  if ex.is_a?(KeyError)\n    raise(LensExceptions::MissingTranslation.new(\"Translation in the path '#{key}' does not exist for #{locale} locale\"))\n  else\n    if ex.message == \"Expected Array or Hash, not String\"\n      raise(LensExceptions::MissingTranslation.new(\"One of the routes given in the path: '#{key}' for the '#{locale}' locale leads to a dead end. \" + \"Please make sure the path to the locale key is correct.\"))\n    else\n      raise(ex)\n    end\n  end\nend"}}],"macros":[],"types":[]}]}]}})