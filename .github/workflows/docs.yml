name: Generate documentation for nightly

on:
  push:
    branches:
      - "master"
      - "docs"
    paths-ignore:
      - "README.md"
      - "CHANGES.md"
      - LICENCE
      - .git*
      - .editorconfig

  workflow_dispatch:

jobs:
  deploy-documentation-for-master:
    runs-on: "ubuntu-latest"
    name: "Generate documentation for nightly"

    steps:
      - uses: actions/checkout@v2
        with:
          ref: docs
          fetch-depth: 0 # fetch all commits/branches
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - uses: actions/cache@v2
        name: "Cache Python dependencies (mkdocs-material and mike)"
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Add git user for mike
        run: |
          git config --global user.name GitHub Actions
          git config --global user.email actions@github.com

      - name: "Deploy documentation for nightly"
        run: mike deploy v0.2.0 nightly master --push

      # TODO add some way of skipping this step when it has already been done
      # in previous commits. 

      - name: "Label development version with -dev suffix"
        run: mike retitle v0.2.0 v0.2.0-dev --push
    
  add_crystal_api_docs_versions_file:
    runs-on: "ubuntu-latest"
    needs: deploy-documentation-for-master
    name: "Deploy Crystal API versions file"

    steps:
      # First we checkout the deploy branch and check
      # if we even need to deploy a new versions file
      - uses: actions/checkout@v2
        with:
          ref: gh-pages

      # Get hash
      - name: Hash deployed cry-versions.json
        id: "hash-deployed-version-json"
        run: echo "::set-output name=hashed::${{ hashFiles('cry-versions.json') }}"

      # Now we head on over to the docs branch
      # and check if we need to update the deployed versions.json
      - uses: actions/checkout@v2
        with:
          ref: docs

      - name: Should we update cry-versions.json?
        id: version-comparison
        run: |
          if [[ ${{steps.hash-deployed-version-json.outputs.hashed}} == ${{hashFiles('cry-versions.json')}} ]]; then
            echo ::set-output name=exit_code::1
          fi
      
      - if: ${{steps.version-comparison.outputs.exit_code }} != 1
        name: "Copy cry-versions.json"
        run: "cp cry-versions.json ../"
      
      - if: ${{steps.version-comparison.outputs.exit_code }} != 1
        uses: actions/checkout@v2
        with:
          ref: gh-pages

      - if: ${{steps.version-comparison.outputs.exit_code }} != 1
        name: "Replace cry-versions.json"
        run: "mv ../cry-versions.json ."

      - if: ${{steps.version-comparison.outputs.exit_code }} != 1
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update cry-versions.cr
      
  deploy-api-documentation-for-master:
    needs: add_crystal_api_docs_versions_file
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: master

      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1.5.3
        with:
          crystal: 1.2.0

      - name: Cache Shards
        uses: actions/cache@v2
        with:
          path: ./lib
          key: shards-${{ hashFiles('shard.lock') }}

      - name: Install Shards
        run: |
          if ! shards check; then
            shards install
          fi
      
      - name: Build API docs
        run: |
          crystal docs --json-config-url=/lens/cry-versions.json --output=api  --project-version=v0.2.0-dev --project-name=Lens \
          --canonical-base-url="https://syeopite.github.io/lens/api/latest" --source-url-pattern="https://github.com/syeopite/lens/blob/%{refname}/%{path}#L%{line}" \
          --source-refname=${GITHUB_SHA::8}

      - name: Deploy API docs
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: api
          target-folder: api/master
          clean: false
          commit-message: "Update API documentation for nightly"
      
